// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fruit_manager_app;

#nullable disable

namespace fruit_manager_app.Migrations
{
    [DbContext(typeof(TpAspNetDbContext))]
    [Migration("20230302212744_Createdb")]
    partial class Createdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemoAspNet.Models.Client", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Solde")
                        .IsRequired()
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DemoAspNet.Models.ClientProduct", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("ClientProduct");
                });

            modelBuilder.Entity("DemoAspNet.Models.Facture", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<float?>("PrixT")
                        .HasColumnType("real");

                    b.Property<float?>("PrixU")
                        .HasColumnType("real");

                    b.Property<int?>("Quantite")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("DemoAspNet.Models.Panier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<float?>("PrixTotal")
                        .HasColumnType("real");

                    b.Property<float?>("PrixU")
                        .HasColumnType("real");

                    b.Property<int?>("Quantite")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendeur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Paniers");
                });

            modelBuilder.Entity("DemoAspNet.Models.PanierProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PanierId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PanierId");

                    b.HasIndex("ProductId");

                    b.ToTable("PanierProduct");
                });

            modelBuilder.Entity("DemoAspNet.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Nbr")
                        .HasColumnType("int");

                    b.Property<string>("Pour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Prix")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLimg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DemoAspNet.Models.Seller", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("sellers");
                });

            modelBuilder.Entity("DemoAspNet.Models.Stat", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("NbrArticle")
                        .HasColumnType("int");

                    b.Property<double?>("Sommes")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("DemoAspNet.Models.ClientProduct", b =>
                {
                    b.HasOne("DemoAspNet.Models.Client", "Client")
                        .WithMany("ClientProducts")
                        .HasForeignKey("ClientId");

                    b.HasOne("DemoAspNet.Models.Product", "Product")
                        .WithMany("ClientProducts")
                        .HasForeignKey("ProductId");

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DemoAspNet.Models.Facture", b =>
                {
                    b.HasOne("DemoAspNet.Models.Client", "Client")
                        .WithMany("Factures")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DemoAspNet.Models.Panier", b =>
                {
                    b.HasOne("DemoAspNet.Models.Client", "Client")
                        .WithMany("Paniers")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DemoAspNet.Models.PanierProduct", b =>
                {
                    b.HasOne("DemoAspNet.Models.Panier", "Panier")
                        .WithMany("PanierProducts")
                        .HasForeignKey("PanierId");

                    b.HasOne("DemoAspNet.Models.Product", "Product")
                        .WithMany("PanierProducts")
                        .HasForeignKey("ProductId");

                    b.Navigation("Panier");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DemoAspNet.Models.Product", b =>
                {
                    b.HasOne("DemoAspNet.Models.Seller", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("DemoAspNet.Models.Stat", b =>
                {
                    b.HasOne("DemoAspNet.Models.Client", "Client")
                        .WithMany("Stats")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DemoAspNet.Models.Client", b =>
                {
                    b.Navigation("ClientProducts");

                    b.Navigation("Factures");

                    b.Navigation("Paniers");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("DemoAspNet.Models.Panier", b =>
                {
                    b.Navigation("PanierProducts");
                });

            modelBuilder.Entity("DemoAspNet.Models.Product", b =>
                {
                    b.Navigation("ClientProducts");

                    b.Navigation("PanierProducts");
                });

            modelBuilder.Entity("DemoAspNet.Models.Seller", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
